//항목 1
Modern_C++_tip_1 : template에서의 타입 추론(포인터, 참조, 값)
Modern_C++_tip_2 : template에서의 타입 추론(배열에서 포인터로의 붕괴(decay)) + 활용
Modern_C++_tip_3 : template에서의 타입 추론(함수에서 포인터로의 붕괴(decay))

//항목 2
Modern_C++_tip_4 : auto 타입 추론은 template 타입 추론과 거의 같다(몇가지 예외만 빼고)

//항목 3
Modern_C++_tip_5 : decltype의 타입 추론 + 후행 반환 타입 예시 + 주의 사항
Modern_C++_tip_6 : decltype(auto) 사용법

//항목 4
Modern_C++_tip_7 : 컴파일러 에러를 유도해 타입 추론 결과 테스팅(정의하지 않은 템플릿 클래스 사용)
Modern_C++_tip_8 : typeid()보단 boost를 쓰자.(하지만 가장 좋은 방법은 타입 추론 매커니즘을 완벽히 이해하는 것이다.)

//항목 5
Modern_C++_tip_9 : 명시적 타입 선언보다 auto를 선호하도록 하자.

//항목 6
Modern_C++_tip_10 : 보이지 않는 프록시 클래스 타입에 의해 auto가 잘못된 추론을 할 수도 있다. 

//항목 7
Modern_C++_tip_11 : ()초기화와 {}초기화의 차이를 확실하게 알아두고 선택하자.

//항목 8
Modern_C++_tip_12 : 0과 NULL대신 nullptr을 사용하자(+정수 타입과 포인터 타입을 함께 오버로딩하는 것은 피하자)